// Generated by github.com/lolopinto/ent/ent, DO NOT EDIT.

import {
  GraphQLFieldConfig,
  GraphQLFieldConfigMap,
  GraphQLID,
  GraphQLInputFieldConfigMap,
  GraphQLInputObjectType,
  GraphQLNonNull,
  GraphQLObjectType,
  GraphQLResolveInfo,
} from "graphql";
import { RequestContext } from "@snowtop/ent";
import { mustDecodeIDFromGQLID } from "@snowtop/ent/graphql";
import { UserAuthentication } from "src/ent/";
import UserAuthenticationRemoveUserAction from "src/ent/user_authentication/actions/user_authentication_remove_user_action";
import { UserAuthenticationType } from "src/graphql/resolvers/";

interface customUserAuthenticationRemoveUserInput {
  userAuthenticationID: string;
  userID: string;
}

interface UserAuthenticationRemoveUserPayload {
  userAuthentication: UserAuthentication;
}

export const UserAuthenticationRemoveUserInputType = new GraphQLInputObjectType(
  {
    name: "UserAuthenticationRemoveUserInput",
    fields: (): GraphQLInputFieldConfigMap => ({
      userAuthenticationID: {
        type: GraphQLNonNull(GraphQLID),
      },
      userID: {
        type: GraphQLNonNull(GraphQLID),
      },
    }),
  },
);

export const UserAuthenticationRemoveUserPayloadType = new GraphQLObjectType({
  name: "UserAuthenticationRemoveUserPayload",
  fields: (): GraphQLFieldConfigMap<
    UserAuthenticationRemoveUserPayload,
    RequestContext
  > => ({
    userAuthentication: {
      type: GraphQLNonNull(UserAuthenticationType),
    },
  }),
});

export const UserAuthenticationRemoveUserType: GraphQLFieldConfig<
  undefined,
  RequestContext,
  { [input: string]: customUserAuthenticationRemoveUserInput }
> = {
  type: GraphQLNonNull(UserAuthenticationRemoveUserPayloadType),
  args: {
    input: {
      description: "",
      type: GraphQLNonNull(UserAuthenticationRemoveUserInputType),
    },
  },
  resolve: async (
    _source,
    { input },
    context: RequestContext,
    _info: GraphQLResolveInfo,
  ): Promise<UserAuthenticationRemoveUserPayload> => {
    let userAuthentication =
      await UserAuthenticationRemoveUserAction.saveXFromID(
        context.getViewer(),
        mustDecodeIDFromGQLID(input.userAuthenticationID),
        mustDecodeIDFromGQLID(input.userID),
      );
    return { userAuthentication: userAuthentication };
  },
};
